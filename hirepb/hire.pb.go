// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hirepb/hire.proto

package hirepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HireType int32

const (
	HireType_UNSPECIFIED HireType = 0
	HireType_EMPLOYEE    HireType = 1
	HireType_CONTRACTOR  HireType = 2
)

var HireType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "EMPLOYEE",
	2: "CONTRACTOR",
}

var HireType_value = map[string]int32{
	"UNSPECIFIED": 0,
	"EMPLOYEE":    1,
	"CONTRACTOR":  2,
}

func (x HireType) String() string {
	return proto.EnumName(HireType_name, int32(x))
}

func (HireType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{0}
}

type HireData struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type                 HireType `protobuf:"varint,3,opt,name=Type,proto3,enum=hire.HireType" json:"Type,omitempty"`
	Duration             int32    `protobuf:"varint,4,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Role                 string   `protobuf:"bytes,5,opt,name=Role,proto3" json:"Role,omitempty"`
	Tags                 []string `protobuf:"bytes,6,rep,name=Tags,proto3" json:"Tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HireData) Reset()         { *m = HireData{} }
func (m *HireData) String() string { return proto.CompactTextString(m) }
func (*HireData) ProtoMessage()    {}
func (*HireData) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{0}
}

func (m *HireData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HireData.Unmarshal(m, b)
}
func (m *HireData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HireData.Marshal(b, m, deterministic)
}
func (m *HireData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HireData.Merge(m, src)
}
func (m *HireData) XXX_Size() int {
	return xxx_messageInfo_HireData.Size(m)
}
func (m *HireData) XXX_DiscardUnknown() {
	xxx_messageInfo_HireData.DiscardUnknown(m)
}

var xxx_messageInfo_HireData proto.InternalMessageInfo

func (m *HireData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HireData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HireData) GetType() HireType {
	if m != nil {
		return m.Type
	}
	return HireType_UNSPECIFIED
}

func (m *HireData) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *HireData) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *HireData) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateHireRequest struct {
	Data                 *HireData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateHireRequest) Reset()         { *m = CreateHireRequest{} }
func (m *CreateHireRequest) String() string { return proto.CompactTextString(m) }
func (*CreateHireRequest) ProtoMessage()    {}
func (*CreateHireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{1}
}

func (m *CreateHireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateHireRequest.Unmarshal(m, b)
}
func (m *CreateHireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateHireRequest.Marshal(b, m, deterministic)
}
func (m *CreateHireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateHireRequest.Merge(m, src)
}
func (m *CreateHireRequest) XXX_Size() int {
	return xxx_messageInfo_CreateHireRequest.Size(m)
}
func (m *CreateHireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateHireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateHireRequest proto.InternalMessageInfo

func (m *CreateHireRequest) GetData() *HireData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateHireResponse struct {
	Data                 *HireData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateHireResponse) Reset()         { *m = CreateHireResponse{} }
func (m *CreateHireResponse) String() string { return proto.CompactTextString(m) }
func (*CreateHireResponse) ProtoMessage()    {}
func (*CreateHireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{2}
}

func (m *CreateHireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateHireResponse.Unmarshal(m, b)
}
func (m *CreateHireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateHireResponse.Marshal(b, m, deterministic)
}
func (m *CreateHireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateHireResponse.Merge(m, src)
}
func (m *CreateHireResponse) XXX_Size() int {
	return xxx_messageInfo_CreateHireResponse.Size(m)
}
func (m *CreateHireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateHireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateHireResponse proto.InternalMessageInfo

func (m *CreateHireResponse) GetData() *HireData {
	if m != nil {
		return m.Data
	}
	return nil
}

// find_pattern is the key type to search for.
// find_text is used when the key type is a string.
// find_number is used when the key type is numeric.
// find_type is used when the key type is HireType.
type FindHireRequest struct {
	FindPattern          string   `protobuf:"bytes,1,opt,name=find_pattern,json=findPattern,proto3" json:"find_pattern,omitempty"`
	FindText             string   `protobuf:"bytes,2,opt,name=find_text,json=findText,proto3" json:"find_text,omitempty"`
	FindNumber           int32    `protobuf:"varint,3,opt,name=find_number,json=findNumber,proto3" json:"find_number,omitempty"`
	FindType             HireType `protobuf:"varint,4,opt,name=find_type,json=findType,proto3,enum=hire.HireType" json:"find_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindHireRequest) Reset()         { *m = FindHireRequest{} }
func (m *FindHireRequest) String() string { return proto.CompactTextString(m) }
func (*FindHireRequest) ProtoMessage()    {}
func (*FindHireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{3}
}

func (m *FindHireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindHireRequest.Unmarshal(m, b)
}
func (m *FindHireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindHireRequest.Marshal(b, m, deterministic)
}
func (m *FindHireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindHireRequest.Merge(m, src)
}
func (m *FindHireRequest) XXX_Size() int {
	return xxx_messageInfo_FindHireRequest.Size(m)
}
func (m *FindHireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindHireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindHireRequest proto.InternalMessageInfo

func (m *FindHireRequest) GetFindPattern() string {
	if m != nil {
		return m.FindPattern
	}
	return ""
}

func (m *FindHireRequest) GetFindText() string {
	if m != nil {
		return m.FindText
	}
	return ""
}

func (m *FindHireRequest) GetFindNumber() int32 {
	if m != nil {
		return m.FindNumber
	}
	return 0
}

func (m *FindHireRequest) GetFindType() HireType {
	if m != nil {
		return m.FindType
	}
	return HireType_UNSPECIFIED
}

type FindHireResponse struct {
	Data                 *HireData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FindHireResponse) Reset()         { *m = FindHireResponse{} }
func (m *FindHireResponse) String() string { return proto.CompactTextString(m) }
func (*FindHireResponse) ProtoMessage()    {}
func (*FindHireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{4}
}

func (m *FindHireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindHireResponse.Unmarshal(m, b)
}
func (m *FindHireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindHireResponse.Marshal(b, m, deterministic)
}
func (m *FindHireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindHireResponse.Merge(m, src)
}
func (m *FindHireResponse) XXX_Size() int {
	return xxx_messageInfo_FindHireResponse.Size(m)
}
func (m *FindHireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindHireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindHireResponse proto.InternalMessageInfo

func (m *FindHireResponse) GetData() *HireData {
	if m != nil {
		return m.Data
	}
	return nil
}

type FindOneHireRequest struct {
	HireName             string   `protobuf:"bytes,1,opt,name=hire_name,json=hireName,proto3" json:"hire_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindOneHireRequest) Reset()         { *m = FindOneHireRequest{} }
func (m *FindOneHireRequest) String() string { return proto.CompactTextString(m) }
func (*FindOneHireRequest) ProtoMessage()    {}
func (*FindOneHireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{5}
}

func (m *FindOneHireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOneHireRequest.Unmarshal(m, b)
}
func (m *FindOneHireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOneHireRequest.Marshal(b, m, deterministic)
}
func (m *FindOneHireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOneHireRequest.Merge(m, src)
}
func (m *FindOneHireRequest) XXX_Size() int {
	return xxx_messageInfo_FindOneHireRequest.Size(m)
}
func (m *FindOneHireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOneHireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindOneHireRequest proto.InternalMessageInfo

func (m *FindOneHireRequest) GetHireName() string {
	if m != nil {
		return m.HireName
	}
	return ""
}

// found is set to true when the requested data is found. False otherwise.
// the data is filled with the data of the document found.
type FindOneHireResponse struct {
	Found                bool      `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Data                 *HireData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FindOneHireResponse) Reset()         { *m = FindOneHireResponse{} }
func (m *FindOneHireResponse) String() string { return proto.CompactTextString(m) }
func (*FindOneHireResponse) ProtoMessage()    {}
func (*FindOneHireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{6}
}

func (m *FindOneHireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOneHireResponse.Unmarshal(m, b)
}
func (m *FindOneHireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOneHireResponse.Marshal(b, m, deterministic)
}
func (m *FindOneHireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOneHireResponse.Merge(m, src)
}
func (m *FindOneHireResponse) XXX_Size() int {
	return xxx_messageInfo_FindOneHireResponse.Size(m)
}
func (m *FindOneHireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOneHireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindOneHireResponse proto.InternalMessageInfo

func (m *FindOneHireResponse) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

func (m *FindOneHireResponse) GetData() *HireData {
	if m != nil {
		return m.Data
	}
	return nil
}

// this message is empty since we are requesting all documents from the DB
type ListHireRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListHireRequest) Reset()         { *m = ListHireRequest{} }
func (m *ListHireRequest) String() string { return proto.CompactTextString(m) }
func (*ListHireRequest) ProtoMessage()    {}
func (*ListHireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{7}
}

func (m *ListHireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHireRequest.Unmarshal(m, b)
}
func (m *ListHireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHireRequest.Marshal(b, m, deterministic)
}
func (m *ListHireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHireRequest.Merge(m, src)
}
func (m *ListHireRequest) XXX_Size() int {
	return xxx_messageInfo_ListHireRequest.Size(m)
}
func (m *ListHireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListHireRequest proto.InternalMessageInfo

// this value is streamed.
type ListHireResponse struct {
	Data                 *HireData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListHireResponse) Reset()         { *m = ListHireResponse{} }
func (m *ListHireResponse) String() string { return proto.CompactTextString(m) }
func (*ListHireResponse) ProtoMessage()    {}
func (*ListHireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{8}
}

func (m *ListHireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHireResponse.Unmarshal(m, b)
}
func (m *ListHireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHireResponse.Marshal(b, m, deterministic)
}
func (m *ListHireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHireResponse.Merge(m, src)
}
func (m *ListHireResponse) XXX_Size() int {
	return xxx_messageInfo_ListHireResponse.Size(m)
}
func (m *ListHireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListHireResponse proto.InternalMessageInfo

func (m *ListHireResponse) GetData() *HireData {
	if m != nil {
		return m.Data
	}
	return nil
}

// the string representing the name of the hire looked for
type DeleteHireRequest struct {
	HireName             string   `protobuf:"bytes,1,opt,name=hire_name,json=hireName,proto3" json:"hire_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteHireRequest) Reset()         { *m = DeleteHireRequest{} }
func (m *DeleteHireRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteHireRequest) ProtoMessage()    {}
func (*DeleteHireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{9}
}

func (m *DeleteHireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteHireRequest.Unmarshal(m, b)
}
func (m *DeleteHireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteHireRequest.Marshal(b, m, deterministic)
}
func (m *DeleteHireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteHireRequest.Merge(m, src)
}
func (m *DeleteHireRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteHireRequest.Size(m)
}
func (m *DeleteHireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteHireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteHireRequest proto.InternalMessageInfo

func (m *DeleteHireRequest) GetHireName() string {
	if m != nil {
		return m.HireName
	}
	return ""
}

// the string representing the name of the hire looked for
type DeleteHireResponse struct {
	HireName             string   `protobuf:"bytes,1,opt,name=hire_name,json=hireName,proto3" json:"hire_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteHireResponse) Reset()         { *m = DeleteHireResponse{} }
func (m *DeleteHireResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteHireResponse) ProtoMessage()    {}
func (*DeleteHireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{10}
}

func (m *DeleteHireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteHireResponse.Unmarshal(m, b)
}
func (m *DeleteHireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteHireResponse.Marshal(b, m, deterministic)
}
func (m *DeleteHireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteHireResponse.Merge(m, src)
}
func (m *DeleteHireResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteHireResponse.Size(m)
}
func (m *DeleteHireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteHireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteHireResponse proto.InternalMessageInfo

func (m *DeleteHireResponse) GetHireName() string {
	if m != nil {
		return m.HireName
	}
	return ""
}

// the new data for the hire is sent
type UpdateHireRequest struct {
	Data                 *HireData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateHireRequest) Reset()         { *m = UpdateHireRequest{} }
func (m *UpdateHireRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateHireRequest) ProtoMessage()    {}
func (*UpdateHireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{11}
}

func (m *UpdateHireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHireRequest.Unmarshal(m, b)
}
func (m *UpdateHireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHireRequest.Marshal(b, m, deterministic)
}
func (m *UpdateHireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHireRequest.Merge(m, src)
}
func (m *UpdateHireRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateHireRequest.Size(m)
}
func (m *UpdateHireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHireRequest proto.InternalMessageInfo

func (m *UpdateHireRequest) GetData() *HireData {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateHireResponse struct {
	Data                 *HireData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateHireResponse) Reset()         { *m = UpdateHireResponse{} }
func (m *UpdateHireResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateHireResponse) ProtoMessage()    {}
func (*UpdateHireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb97c02d6be21b9b, []int{12}
}

func (m *UpdateHireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHireResponse.Unmarshal(m, b)
}
func (m *UpdateHireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHireResponse.Marshal(b, m, deterministic)
}
func (m *UpdateHireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHireResponse.Merge(m, src)
}
func (m *UpdateHireResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateHireResponse.Size(m)
}
func (m *UpdateHireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHireResponse proto.InternalMessageInfo

func (m *UpdateHireResponse) GetData() *HireData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("hire.HireType", HireType_name, HireType_value)
	proto.RegisterType((*HireData)(nil), "hire.HireData")
	proto.RegisterType((*CreateHireRequest)(nil), "hire.CreateHireRequest")
	proto.RegisterType((*CreateHireResponse)(nil), "hire.CreateHireResponse")
	proto.RegisterType((*FindHireRequest)(nil), "hire.FindHireRequest")
	proto.RegisterType((*FindHireResponse)(nil), "hire.FindHireResponse")
	proto.RegisterType((*FindOneHireRequest)(nil), "hire.FindOneHireRequest")
	proto.RegisterType((*FindOneHireResponse)(nil), "hire.FindOneHireResponse")
	proto.RegisterType((*ListHireRequest)(nil), "hire.ListHireRequest")
	proto.RegisterType((*ListHireResponse)(nil), "hire.ListHireResponse")
	proto.RegisterType((*DeleteHireRequest)(nil), "hire.DeleteHireRequest")
	proto.RegisterType((*DeleteHireResponse)(nil), "hire.DeleteHireResponse")
	proto.RegisterType((*UpdateHireRequest)(nil), "hire.UpdateHireRequest")
	proto.RegisterType((*UpdateHireResponse)(nil), "hire.UpdateHireResponse")
}

func init() { proto.RegisterFile("hirepb/hire.proto", fileDescriptor_cb97c02d6be21b9b) }

var fileDescriptor_cb97c02d6be21b9b = []byte{
	// 560 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4b, 0x6f, 0xd3, 0x40,
	0x10, 0xc6, 0x79, 0xc9, 0x99, 0x54, 0x49, 0xbc, 0xbc, 0x4c, 0x7a, 0x20, 0xf8, 0x14, 0x81, 0x54,
	0xd2, 0x22, 0x51, 0x10, 0x48, 0x15, 0x4d, 0x5c, 0x51, 0xa9, 0xc4, 0xd1, 0xd6, 0x3d, 0xc0, 0x25,
	0x72, 0xf0, 0x16, 0x2c, 0xb5, 0xb6, 0xb1, 0x37, 0xa8, 0xfd, 0x1d, 0x48, 0x5c, 0xf9, 0xab, 0x68,
	0x76, 0xbd, 0xb5, 0x13, 0x47, 0x55, 0xda, 0x93, 0xd7, 0xdf, 0xce, 0xe3, 0x9b, 0x99, 0x6f, 0x16,
	0x8c, 0x9f, 0x41, 0xc2, 0xe2, 0xf9, 0x6b, 0xfc, 0xec, 0xc4, 0x49, 0xc4, 0x23, 0x52, 0xc3, 0xb3,
	0xf5, 0x57, 0x03, 0xfd, 0x73, 0x90, 0xb0, 0xb1, 0xc7, 0x3d, 0xd2, 0x86, 0x4a, 0xe0, 0x9b, 0x5a,
	0x5f, 0x1b, 0x34, 0x69, 0x25, 0xf0, 0x09, 0x81, 0xda, 0xc4, 0xbb, 0x64, 0x66, 0x45, 0x20, 0xe2,
	0x4c, 0x2c, 0xa8, 0xb9, 0xd7, 0x31, 0x33, 0xab, 0x7d, 0x6d, 0xd0, 0xde, 0x6b, 0xef, 0x88, 0x88,
	0x18, 0x01, 0x51, 0x2a, 0xee, 0x48, 0x0f, 0xf4, 0xf1, 0x22, 0xf1, 0x78, 0x10, 0x85, 0x66, 0xad,
	0xaf, 0x0d, 0xea, 0xf4, 0xe6, 0x1f, 0x63, 0xd2, 0xe8, 0x82, 0x99, 0x75, 0x19, 0x13, 0xcf, 0x88,
	0xb9, 0xde, 0x8f, 0xd4, 0x6c, 0xf4, 0xab, 0x88, 0xe1, 0xd9, 0xda, 0x07, 0x63, 0x94, 0x30, 0x8f,
	0x33, 0x8c, 0x4d, 0xd9, 0xaf, 0x05, 0x4b, 0x39, 0x26, 0xf7, 0x3d, 0xee, 0x09, 0x8a, 0xad, 0x62,
	0x72, 0xa4, 0x4f, 0xc5, 0x9d, 0xf5, 0x0e, 0x48, 0xd1, 0x31, 0x8d, 0xa3, 0x30, 0x65, 0x1b, 0x79,
	0xfe, 0xd3, 0xa0, 0x73, 0x14, 0x84, 0x7e, 0x31, 0xe3, 0x0b, 0xd8, 0x3a, 0x0f, 0x42, 0x7f, 0x16,
	0x7b, 0x9c, 0xb3, 0x24, 0xcc, 0x9a, 0xd3, 0x42, 0x6c, 0x2a, 0x21, 0xb2, 0x0d, 0x4d, 0x61, 0xc2,
	0xd9, 0x15, 0xcf, 0x5a, 0xa5, 0x23, 0xe0, 0xb2, 0x2b, 0x4e, 0x9e, 0x83, 0xb0, 0x9d, 0x85, 0x8b,
	0xcb, 0x39, 0x4b, 0x44, 0xd7, 0xea, 0x14, 0x10, 0x9a, 0x08, 0x84, 0xbc, 0x52, 0xde, 0xd8, 0xd4,
	0xda, 0xda, 0xa6, 0xca, 0x68, 0xd7, 0x31, 0xb3, 0xde, 0x42, 0x37, 0x27, 0x78, 0x87, 0xca, 0x76,
	0x81, 0xa0, 0x9f, 0x13, 0x2e, 0x75, 0x73, 0x1b, 0x9a, 0x68, 0x3c, 0x0b, 0x71, 0xc6, 0xb2, 0x30,
	0x1d, 0x01, 0x9c, 0xb3, 0xe5, 0xc0, 0xc3, 0x25, 0x97, 0x2c, 0xdb, 0x23, 0xa8, 0x9f, 0x47, 0x8b,
	0x50, 0xaa, 0x44, 0xa7, 0xf2, 0xe7, 0x86, 0x43, 0xe5, 0x16, 0x0e, 0x06, 0x74, 0x4e, 0x82, 0x94,
	0x17, 0x08, 0x60, 0x39, 0x39, 0x74, 0x87, 0x72, 0x86, 0x60, 0x8c, 0xd9, 0x05, 0xe3, 0x9b, 0x57,
	0xb3, 0x0b, 0xa4, 0xe8, 0x91, 0xe5, 0xba, 0xd5, 0x65, 0x1f, 0x8c, 0xb3, 0xd8, 0xbf, 0x9f, 0x00,
	0x8b, 0x8e, 0x9b, 0xd7, 0xf5, 0xf2, 0xbd, 0xdc, 0x45, 0xb1, 0x43, 0x1d, 0x68, 0x9d, 0x4d, 0x4e,
	0xa7, 0xf6, 0xe8, 0xf8, 0xe8, 0xd8, 0x1e, 0x77, 0x1f, 0x90, 0x2d, 0xd0, 0xed, 0x2f, 0xd3, 0x13,
	0xe7, 0xab, 0x6d, 0x77, 0x35, 0xd2, 0x06, 0x18, 0x39, 0x13, 0x97, 0x7e, 0x1a, 0xb9, 0x0e, 0xed,
	0x56, 0xf6, 0xfe, 0x54, 0xa1, 0xa3, 0xa2, 0x9d, 0xb2, 0xe4, 0x77, 0xf0, 0x9d, 0x91, 0x03, 0x80,
	0x7c, 0x13, 0xc8, 0x53, 0x99, 0xb2, 0xb4, 0x54, 0x3d, 0xb3, 0x7c, 0x91, 0x71, 0xfe, 0x00, 0xba,
	0x92, 0x1b, 0x79, 0x2c, 0xad, 0x56, 0xf6, 0xa3, 0xf7, 0x64, 0x15, 0x96, 0xae, 0x43, 0x8d, 0x1c,
	0x42, 0xab, 0x20, 0x20, 0x62, 0xe6, 0x86, 0xcb, 0x32, 0xec, 0x3d, 0x5b, 0x73, 0x93, 0x11, 0xf8,
	0x08, 0x4d, 0x25, 0x90, 0x54, 0x31, 0x58, 0x11, 0x91, 0x62, 0xb0, 0x2a, 0xa4, 0xa1, 0x86, 0xf5,
	0xe7, 0x43, 0x57, 0xf5, 0x97, 0x84, 0xa3, 0xea, 0x5f, 0xa3, 0x8f, 0x03, 0x80, 0x7c, 0x92, 0x2a,
	0x40, 0x49, 0x14, 0x2a, 0x40, 0x79, 0xe8, 0x87, 0xfa, 0xb7, 0x86, 0x7c, 0x78, 0xe7, 0x0d, 0xf1,
	0xe8, 0xbe, 0xf9, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xbe, 0xd5, 0x19, 0x89, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HireDataServiceClient is the client API for HireDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HireDataServiceClient interface {
	// Service to create a new hire
	CreateHire(ctx context.Context, in *CreateHireRequest, opts ...grpc.CallOption) (*CreateHireResponse, error)
	// Request is a string with the attribute to look for: name, role, type, duration, tag
	FindHire(ctx context.Context, in *FindHireRequest, opts ...grpc.CallOption) (HireDataService_FindHireClient, error)
	// Services looks for hire data in the database and returns true if found, false otherwise
	FindOneHire(ctx context.Context, in *FindOneHireRequest, opts ...grpc.CallOption) (*FindOneHireResponse, error)
	// Service to show all hires in the database collection
	ListHires(ctx context.Context, in *ListHireRequest, opts ...grpc.CallOption) (HireDataService_ListHiresClient, error)
	// Service to delete a hire from the database collection
	DeleteHire(ctx context.Context, in *DeleteHireRequest, opts ...grpc.CallOption) (*DeleteHireResponse, error)
	// Service updates a current hire data
	UpdateHire(ctx context.Context, in *UpdateHireRequest, opts ...grpc.CallOption) (*UpdateHireResponse, error)
}

type hireDataServiceClient struct {
	cc *grpc.ClientConn
}

func NewHireDataServiceClient(cc *grpc.ClientConn) HireDataServiceClient {
	return &hireDataServiceClient{cc}
}

func (c *hireDataServiceClient) CreateHire(ctx context.Context, in *CreateHireRequest, opts ...grpc.CallOption) (*CreateHireResponse, error) {
	out := new(CreateHireResponse)
	err := c.cc.Invoke(ctx, "/hire.HireDataService/CreateHire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hireDataServiceClient) FindHire(ctx context.Context, in *FindHireRequest, opts ...grpc.CallOption) (HireDataService_FindHireClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HireDataService_serviceDesc.Streams[0], "/hire.HireDataService/FindHire", opts...)
	if err != nil {
		return nil, err
	}
	x := &hireDataServiceFindHireClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HireDataService_FindHireClient interface {
	Recv() (*FindHireResponse, error)
	grpc.ClientStream
}

type hireDataServiceFindHireClient struct {
	grpc.ClientStream
}

func (x *hireDataServiceFindHireClient) Recv() (*FindHireResponse, error) {
	m := new(FindHireResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hireDataServiceClient) FindOneHire(ctx context.Context, in *FindOneHireRequest, opts ...grpc.CallOption) (*FindOneHireResponse, error) {
	out := new(FindOneHireResponse)
	err := c.cc.Invoke(ctx, "/hire.HireDataService/FindOneHire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hireDataServiceClient) ListHires(ctx context.Context, in *ListHireRequest, opts ...grpc.CallOption) (HireDataService_ListHiresClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HireDataService_serviceDesc.Streams[1], "/hire.HireDataService/ListHires", opts...)
	if err != nil {
		return nil, err
	}
	x := &hireDataServiceListHiresClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HireDataService_ListHiresClient interface {
	Recv() (*ListHireResponse, error)
	grpc.ClientStream
}

type hireDataServiceListHiresClient struct {
	grpc.ClientStream
}

func (x *hireDataServiceListHiresClient) Recv() (*ListHireResponse, error) {
	m := new(ListHireResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hireDataServiceClient) DeleteHire(ctx context.Context, in *DeleteHireRequest, opts ...grpc.CallOption) (*DeleteHireResponse, error) {
	out := new(DeleteHireResponse)
	err := c.cc.Invoke(ctx, "/hire.HireDataService/DeleteHire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hireDataServiceClient) UpdateHire(ctx context.Context, in *UpdateHireRequest, opts ...grpc.CallOption) (*UpdateHireResponse, error) {
	out := new(UpdateHireResponse)
	err := c.cc.Invoke(ctx, "/hire.HireDataService/UpdateHire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HireDataServiceServer is the server API for HireDataService service.
type HireDataServiceServer interface {
	// Service to create a new hire
	CreateHire(context.Context, *CreateHireRequest) (*CreateHireResponse, error)
	// Request is a string with the attribute to look for: name, role, type, duration, tag
	FindHire(*FindHireRequest, HireDataService_FindHireServer) error
	// Services looks for hire data in the database and returns true if found, false otherwise
	FindOneHire(context.Context, *FindOneHireRequest) (*FindOneHireResponse, error)
	// Service to show all hires in the database collection
	ListHires(*ListHireRequest, HireDataService_ListHiresServer) error
	// Service to delete a hire from the database collection
	DeleteHire(context.Context, *DeleteHireRequest) (*DeleteHireResponse, error)
	// Service updates a current hire data
	UpdateHire(context.Context, *UpdateHireRequest) (*UpdateHireResponse, error)
}

func RegisterHireDataServiceServer(s *grpc.Server, srv HireDataServiceServer) {
	s.RegisterService(&_HireDataService_serviceDesc, srv)
}

func _HireDataService_CreateHire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HireDataServiceServer).CreateHire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hire.HireDataService/CreateHire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HireDataServiceServer).CreateHire(ctx, req.(*CreateHireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HireDataService_FindHire_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FindHireRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HireDataServiceServer).FindHire(m, &hireDataServiceFindHireServer{stream})
}

type HireDataService_FindHireServer interface {
	Send(*FindHireResponse) error
	grpc.ServerStream
}

type hireDataServiceFindHireServer struct {
	grpc.ServerStream
}

func (x *hireDataServiceFindHireServer) Send(m *FindHireResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HireDataService_FindOneHire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindOneHireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HireDataServiceServer).FindOneHire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hire.HireDataService/FindOneHire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HireDataServiceServer).FindOneHire(ctx, req.(*FindOneHireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HireDataService_ListHires_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListHireRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HireDataServiceServer).ListHires(m, &hireDataServiceListHiresServer{stream})
}

type HireDataService_ListHiresServer interface {
	Send(*ListHireResponse) error
	grpc.ServerStream
}

type hireDataServiceListHiresServer struct {
	grpc.ServerStream
}

func (x *hireDataServiceListHiresServer) Send(m *ListHireResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HireDataService_DeleteHire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteHireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HireDataServiceServer).DeleteHire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hire.HireDataService/DeleteHire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HireDataServiceServer).DeleteHire(ctx, req.(*DeleteHireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HireDataService_UpdateHire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HireDataServiceServer).UpdateHire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hire.HireDataService/UpdateHire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HireDataServiceServer).UpdateHire(ctx, req.(*UpdateHireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HireDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hire.HireDataService",
	HandlerType: (*HireDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateHire",
			Handler:    _HireDataService_CreateHire_Handler,
		},
		{
			MethodName: "FindOneHire",
			Handler:    _HireDataService_FindOneHire_Handler,
		},
		{
			MethodName: "DeleteHire",
			Handler:    _HireDataService_DeleteHire_Handler,
		},
		{
			MethodName: "UpdateHire",
			Handler:    _HireDataService_UpdateHire_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindHire",
			Handler:       _HireDataService_FindHire_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListHires",
			Handler:       _HireDataService_ListHires_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "hirepb/hire.proto",
}
